#!/usr/bin/octave -qf

source('octave/graficar.m');

args = argv();

if(size(args) != 1)
    printf('Uso: ./graficar <gráfico>\n');
    exit(-1);
end

grafico = args{1};

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 1: Caso general                                                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if(strcmp(grafico, 'problema1-caso-general'))
    graficar(struct('csv',     'perf/problema1/caso-general.csv',
                    'titulo',  'Tiempo de ejecuci\''on',
                    'ajuste',  'n^2',
                    'coef',    0.000035));
elseif(strcmp(grafico, 'problema1-caso-general-n'))
    graficar(struct('csv',     'perf/problema1/caso-general.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',
                    'divisor', 'n',
                    'ajuste',  'n',
                    'coef',    0.035));
elseif(strcmp(grafico, 'problema1-caso-general-n2'))
    graficar(struct('csv',     'perf/problema1/caso-general.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n^2$',
                    'unidad',  'microsegundos',                    
                    'divisor', 'n^2',
                    'ajuste',  '1',
                    'coef',    0.035, 
                    'ylim',    0.1));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 1: Instancias aleatorias                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elseif(strcmp(grafico, 'problema1-instancias-aleatorias'))
    graficar(struct('csv',     'perf/problema1/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on',
                    'ajuste',  'n^2',
                    'coef',    0.000035));
elseif(strcmp(grafico, 'problema1-instancias-aleatorias-n'))
    graficar(struct('csv',     'perf/problema1/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',
                    'divisor', 'n',
                    'ajuste',  'n',
                    'coef',    0.035));
elseif(strcmp(grafico, 'problema1-instancias-aleatorias-n2'))
    graficar(struct('csv',     'perf/problema1/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n^2$',
                    'unidad',  'microsegundos',                    
                    'divisor', 'n^2',
                    'ajuste',  '1',
                    'coef',    0.035, 
                    'ylim',    0.1));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 2: Caso general                                                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elseif(strcmp(grafico, 'problema2-caso-general'))
    graficar(struct('csv',     'perf/problema2/caso-general.csv',
                    'titulo',  'Tiempo de ejecuci\''on',
                    'ajuste',  'n',
                    'coef',    0.0025));
elseif(strcmp(grafico, 'problema2-caso-general-n'))
    graficar(struct('csv',     'perf/problema2/caso-general.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',
                    'divisor', 'n',
                    'ajuste',  '1',
                    'coef',    2.5,
                    'ylim',    4));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 2: Instancias aleatorias                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elseif(strcmp(grafico, 'problema2-instancias-aleatorias'))
    graficar(struct('csv',     'perf/problema2/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on',
                    'ajuste',  'n',
                    'coef',    0.0025));
elseif(strcmp(grafico, 'problema2-instancias-aleatorias-n'))
    graficar(struct('csv',     'perf/problema2/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',
                    'divisor', 'n',
                    'ajuste',  '1',
                    'coef',    2.5,
                    'ylim',    4));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 3: Peor caso                                                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elseif(strcmp(grafico, 'problema3-peor-caso'))
    graficar(struct('csv',     'perf/problema3/peor-caso.csv',
                    'titulo',  'Tiempo de ejecuci\''on',
                    'ajuste',  'n*log(n)',
                    'coef',    0.001));
elseif(strcmp(grafico, 'problema3-peor-caso-logn'))
    graficar(struct('csv',     'perf/problema3/peor-caso.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',
                    'divisor', 'n',
                    'ajuste',  'log(n)',
                    'coef',    1));
elseif(strcmp(grafico, 'problema3-peor-caso-n'))
    graficar(struct('csv',     'perf/problema3/peor-caso.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $log(n)$',
                    'divisor', 'log(n)',
                    'ajuste',  'n',
                    'coef',    0.001));    

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 3: Mejor caso                                                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elseif(strcmp(grafico, 'problema3-mejor-caso'))
    graficar(struct('csv',    'perf/problema3/mejor-caso.csv',
                    'titulo', 'Tiempo de ejecuci\''on',
                    'ajuste', 'n*log(n)',
                    'coef',   0.0003));
elseif(strcmp(grafico, 'problema3-mejor-caso-logn'))
    graficar(struct('csv',     'perf/problema3/mejor-caso.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',                    
                    'divisor', 'n',
                    'ajuste',  'log(n)',
                    'coef',    0.3));
elseif(strcmp(grafico, 'problema3-mejor-caso-n'))
    graficar(struct('csv',     'perf/problema3/mejor-caso.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $log(n)$',
                    'divisor', 'log(n)',
                    'ajuste',  'n',
                    'coef',    0.0003));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Problema 3: Instancias aleatorias                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elseif(strcmp(grafico, 'problema3-instancias-aleatorias'))
    graficar(struct('csv',    'perf/problema3/instancias-aleatorias.csv',
                    'titulo', 'Tiempo de ejecuci\''on',
                    'ajuste', 'n*log(n)',
                    'coef',   0.0004));
elseif(strcmp(grafico, 'problema3-instancias-aleatorias-logn'))
    graficar(struct('csv',     'perf/problema3/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $n$',
                    'unidad',  'microsegundos',
                    'divisor', 'n',
                    'ajuste',  'log(n)',
                    'coef',    0.4));
elseif(strcmp(grafico, 'problema3-instancias-aleatorias-n'))
    graficar(struct('csv',     'perf/problema3/instancias-aleatorias.csv',
                    'titulo',  'Tiempo de ejecuci\''on dividido por $log(n)$',
                    'divisor', 'log(n)',
                    'ajuste',  'n',
                    'coef',    0.0004));

else
    printf('Gráfico inválido.\n');
    exit(-1);
end

cd('tex');
print(grafico, '-S950,450', '-dtex');
